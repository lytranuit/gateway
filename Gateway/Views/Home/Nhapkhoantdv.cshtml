
@{
    ViewBag.Title = "Nhập dữ liệu khoáng trình dược viên";
    Layout = "~/Views/Shared/Layout1.cshtml";
}

@section styles {
    <link href="https://cdn.datatables.net/1.10.19/css/jquery.dataTables.min.css" rel="stylesheet">
    <link href="https://cdn.datatables.net/buttons/1.5.6/css/buttons.dataTables.min.css" rel="stylesheet">

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.4.1/css/bootstrap-datepicker3.css" />

    <style>
        .bootstrap-select.btn-group .dropdown-toggle .caret {
            right: 10px;
            margin-top: -3px;
        }

        .bootstrap-select:not([class*="col-"]):not([class*="form-control"]):not(.input-group-btn) {
            width: 100% !important;
        }

        span.text {
            font-size: 0.8em;
        }

        .bootstrap-select .dropdown-menu {
            left: auto;
            right: 0;
            width: 100%;
        }

        .selectui .dropdown-menu {
            left: 0;
            right: auto;
        }

        .bootstrap-select.btn-group .dropdown-toggle .caret {
            right: 10px;
            margin-top: -3px;
        }

        .bootstrap-select:not([class*="col-"]):not([class*="form-control"]):not(.input-group-btn) {
            width: 100% !important;
        }

        span.text {
            font-size: 0.8em;
        }

        .bootstrap-select .dropdown-menu {
            left: auto;
            right: 0;
            width: 100%;
        }

        .selectui .dropdown-menu {
            left: 0;
            right: auto;
        }

        div.dataTables_wrapper {
            width: 100%;
            margin: 0 auto;
        }

        table.dataTable tbody th, table.dataTable tbody td {
            padding: 5px 5px;
            font-size: 11px;
        }
    </style>
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div id="heightscreen">
        <div class="w3-card w3-white" style="border-radius:0.25rem">
            <ol class="breadcrumb" style="margin-top:42px;margin-bottom:0px;">
                <li class="breadcrumb-item"><a style="color:#007bff;font-weight:700" href="#">TRANG CHỦ</a></li>
                <li class="breadcrumb-item active w3-text-black font-weight-normal">NHẬP DỮ LIỆU KHOÁNG TRÌNH DƯỢC VIÊN</li>
            </ol>
        </div>
        <div class="alert alert-primary mb-0" role="alert">
            <b>GHI CHÚ :</b> Nếu gặp các trường hợp lỗi vui lòng liên hệ Quang IT SĐT : 0387246802 để được hỗ trợ.
        </div>
        <div class="alert alert-danger mb-0" role="alert">
            <b>LƯU Ý :</b> File excel nhập vào phải là dữ liệu thô, tên file không có dấu, không dùng lệnh Merge để gộp các hàng các cột lại.
        </div>
        <div class="alert alert-secondary mb-0" role="alert">
            <b>MẸO :</b> Bấm Ctrl + F để tìm kiếm các trường thông tin cần thiết.
        </div>
        <div class="alert border mb-0" role="alert">
            <b>FILE EXCEL MẪU :</b> <a class="font-weight-bold" href="~/Content/FORMKHOANGTDV.xlsx">TẢI XUỐNG</a>
        </div>
        <div class="w3-content w3-padding box p-0 pt-0" style="background-color:white;margin-top:3px;">
            <div class="w3-row">
                <div class="card mb-0">
                    <div class="card-header">
                        <button id="btnhoantat" type="button" class="btn btn-success btn-sm transition-3d-hover m-0"><i class="fa fa-check"></i> HOÀN TẤT</button>

                        <button id="btnxem" type="button" class="btn btn-secondary btn-sm transition-3d-hover m-0"><i class="fa fa-eye"></i> XEM DỮ LIỆU ĐÃ NHẬP</button>
                        <button type="button" onClick="window.location.reload()" class="btn btn-danger btn-sm transition-3d-hover m-0"><i class="fa fa-reply"></i> TẢI LẠI</button>
                    </div>
                    <div class="card-body pb-0 pt-1">
                        <div class="form-row">
                            <div class="form-group col-md-2 col-sm-6 mb-0 divthang">
                                <label class="my-1 mr-2 font-weight-bold" for="chon">Mã Chi Nhánh<code>(*)</code></label>
                                <select class="selectpicker my-1 mr-sm-2 show-tick" multiple name="macn" id="macn">
                                    @foreach (var k in ViewBag.donvi)
                                    {
                                        <option value=@k.macn>@k.Tencn</option>
                                    }
                                </select>
                            </div>
                            <div class="form-group col-md-2 col-sm-6 mb-0 divthang">
                                <label class="my-1 mr-2 font-weight-bold" for="chon">Quí<code>(*)</code></label>
                                <select class="selectpicker my-1 mr-sm-2 show-tick" name="qui" id="qui">
                                    <option selected value="1">1</option>
                                    <option value="2">2</option>
                                    <option value="3">3</option>
                                    <option value="4">4</option>
                                </select>
                            </div>
                            <div class="form-group col-md-2 col-sm-6 mb-0 divthang">
                                <label class="my-1 mr-2 font-weight-bold" for="chon">Năm<code>(*)</code></label>
                                <select class="selectpicker my-1 mr-sm-2 show-tick" name="nam" id="nam">
                                    <option selected value="@DateTime.Now.Year">@DateTime.Now.Year</option>
                                    <option value="@(DateTime.Now.Year - 1)">@(DateTime.Now.Year - 1)</option>
                                    <option value="@(DateTime.Now.Year - 2)">@(DateTime.Now.Year - 2)</option>
                                    <option value="@(DateTime.Now.Year - 3)">@(DateTime.Now.Year - 3)</option>
                                </select>
                            </div>
                            <div class="form-group col-md-8 col-sm-6 mb-0">
                                <label class="my-1 mr-2 font-weight-bold" for="chon">Nhập file Excel<code>(*)</code></label>
                                <input type="file" class="form-control-file  my-1 mr-sm-2" accept="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" id="fileexcel">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="w3-content w3-padding box p-0 pt-0" style="background-color:white;margin-top:3px;">
            <div class="w3-row">
                <div class="card mb-0">
                    <div class="card-header">
                        <h2 class="text-danger text-center text-uppercase" id="tabletext"></h2>
                    </div>
                    <div class="card-body pb-0 pt-1">
                        <div class="table-responsive" id="partialtable">
                            <table id="exceltable" class="table-bordered display nowrap dataTable no-footer">
                                <thead id="tableheader">
                                    <tr>
                                        <th>MÃ CHI NHÁNH</th>
                                        <th>THÁNG</th>
                                        <th>NĂM</th>
                                        <th>MÃ TRÌNH DƯỢC VIÊN</th>
                                        <th>TÊN TRÌNH DƯỢC VIÊN</th>
                                        <th>PHÂN LOẠI</th>
                                        <th>MÃ TDV TỔ TRƯỞNG</th>
                                        <th>DS KHOÁN</th>
                                        <th>ID LOCAL TRÌNH DƯỢC</th>
                                        <th>ID GLOBAL TRÌNH DƯỢC</th>
                                        <th>ID GLOBAL TỔ TRƯỞNG</th>
                                        <th>TÊN TỔ TRƯỞNG</th>
                                        <th>ID GLOBAL QUẢN LÝ</th>
                                        <th>TÊN QUẢN LÝ</th>
                                        <th>ID GLOBAL GIÁM ĐỐC CN</th>
                                        <th>TÊN GIÁM ĐỐC CN</th>
                                        <th>ID GLOBAL GIÁM ĐỐC VÙNG</th>
                                        <th>TÊN GIÁM ĐỐC VÙNG</th>
                                    </tr>
                                </thead>
                                <tbody id="tablebody"></tbody>
                            </table>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>
}
@section scripts {
    <script src="~/Scripts/bootstrap-select.js?version=99"></script>
    @*<script src="https://cdn.jsdelivr.net/gh/linways/table-to-excel@v1.0.4/dist/tableToExcel.js"></script>*@
    <script src="https://cdn.jsdelivr.net/npm/xlsx/dist/xlsx.full.min.js"></script>

    @*<script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.7.7/xlsx.core.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/xls/0.7.4-a/xls.core.min.js"></script>*@
    <script src="https://cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/1.5.6/js/dataTables.buttons.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/1.5.6/js/buttons.flash.min.js"></script>


    <script src="https://cdn.datatables.net/buttons/1.5.6/js/buttons.html5.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/1.5.6/js/buttons.print.min.js"></script>
    <script>
        var ExcelToJSON = function() {
            this.parseExcel = function(file) {
                var reader = new FileReader();

                reader.onload = function(e) {
                    var data = e.target.result;
                    var workbook = XLSX.read(data, {
                        type: 'binary'
                    });
                    workbook.SheetNames.forEach(function(sheetName) {
                        var XL_row_object = XLSX.utils.sheet_to_row_object_array(workbook.Sheets[sheetName],{defval:""});
                        var productList = JSON.parse(JSON.stringify(XL_row_object));

                        var rows = $('#exceltable tbody');
                        console.log(productList)
                        for (i = 0; i < productList.length; i++) {
                            var columns = Object.values(productList[i])
                            var rowss = $('<tr/>');
                            for (var colIndex = 0; colIndex < 18; colIndex++) {
                                var cellValue = columns[colIndex];
                                if (cellValue == null)
                                    cellValue = "";
                                rowss.append($('<td/>').html(cellValue));
                            }
                            rows.append(rowss);
                        }
                        $("#partialtable > table").dataTable({
                            "iDisplayLength": 500, "scrollX": true, dom: 'Bfrtip',
                            buttons: [
                           'copy', 'excel'
                            ]
                        });
                        //$("#exceltable").dataTable({
                        //    "iDisplayLength": 50, "scrollX": true, dom: 'Bfrtip',
                        //    buttons: [
                        //      'copy', 'excel'
                        //    ]
                        //});

                    })
                };
                reader.onerror = function(ex) {
                    console.log(ex);
                };

                reader.readAsBinaryString(file);
            };
        };

        function handleFileSelect(evt) {
            var files = evt.target.files; // FileList object
            var xl2json = new ExcelToJSON();
            xl2json.parseExcel(files[0]);
        }

        document.getElementById('fileexcel').addEventListener('change', handleFileSelect, false);
    </script>
    <script>
        //function ExportToTable() {
        //    $('#exceltable').empty();
        //    var regex = /^([a-zA-Z0-9\s_\\.\-:])+(.xlsx|.xls)$/;
        //    /*Checks whether the file is a valid excel file*/
        //    if (regex.test($("#fileexcel").val().toLowerCase())) {
        //        var xlsxflag = false; /*Flag for checking whether excel is .xls format or .xlsx format*/
        //        if ($("#fileexcel").val().toLowerCase().indexOf(".xlsx") > 0) {
        //            xlsxflag = true;
        //        }
        //        /*Checks whether the browser supports HTML5*/
        //        if (typeof (FileReader) != "undefined") {
        //            var reader = new FileReader();
        //            reader.onload = function (e) {
        //                var data = e.target.result;
        //                /*Converts the excel data in to object*/
        //                if (xlsxflag) {
        //                    var workbook = XLSX.read(data, { type: 'binary' });
        //                }
        //                else {
        //                    var workbook = XLS.read(data, { type: 'binary' });
        //                }
        //                /*Gets all the sheetnames of excel in to a variable*/
        //                var sheet_name_list = workbook.SheetNames;

        //                var cnt = 0; /*This is used for restricting the script to consider only first sheet of excel*/
        //                sheet_name_list.forEach(function (y) { /*Iterate through all sheets*/
        //                    /*Convert the cell value to Json*/
        //                    if (xlsxflag) {
        //                        var exceljson = XLSX.utils.sheet_to_json(workbook.Sheets[y]);
        //                    }
        //                    else {
        //                        var exceljson = XLS.utils.sheet_to_row_object_array(workbook.Sheets[y]);
        //                    }
        //                    if (exceljson.length > 0 && cnt == 0) {
        //                        BindTable(exceljson, '#exceltable');
        //                        cnt++;
        //                    }
        //                });
        //                $("#tabletext").text($("#exceltable > tr").not(':first').length + " hàng hợp lệ được nhập từ file Excel");
        //                $('#exceltable').show();
        //            }
        //            if (xlsxflag) {/*If excel file is .xlsx extension than creates a Array Buffer from excel*/
        //                reader.readAsArrayBuffer($("#fileexcel")[0].files[0]);
        //            }
        //            else {
        //                reader.readAsBinaryString($("#fileexcel")[0].files[0]);
        //            }
        //        }
        //        else {
        //            alert("Sorry! Your browser does not support HTML5!");
        //        }
        //    }
        //    else {
        //        toastr.options = {
        //            "closeButton": false,
        //            "debug": false,
        //            "newestOnTop": true,
        //            "progressBar": true,
        //            "positionClass": "toast-top-right",
        //            "preventDuplicates": false,
        //            "onclick": null,
        //            "showDuration": "300",
        //            "hideDuration": "1000",
        //            "timeOut": "5000",
        //            "extendedTimeOut": "1000",
        //            "showEasing": "swing",
        //            "hideEasing": "linear",
        //            "showMethod": "fadeIn",
        //            "hideMethod": "fadeOut"
        //        }
        //        Command: toastr["warning"]("Kiểm tra lại tên file excel không được có dấu và ký tự đặc biệt !", "Thông báo")
        //        $("#tabletext").text("");
        //    }
        //}
        //function isNumeric(str) {
        //    if (typeof str != "string") return false // we only process strings!
        //    return !isNaN(str) && // use type coercion to parse the _entirety_ of the string (`parseFloat` alone does not do this)...
        //           !isNaN(parseFloat(str)) // ...and ensure strings of whitespace fail
        //}
        //function BindTable(jsondata, tableid) {/*Function used to convert the JSON array to Html Table*/
        //    var columns = BindTableHeader(jsondata, tableid); /*Gets all the column headings of Excel*/
        //    for (var i = 0; i < jsondata.length; i++) {
        //        var row$ = $('<tr/>');
        //        for (var colIndex = 0; colIndex < columns.length; colIndex++) {
        //            var cellValue = jsondata[i][columns[colIndex]];
        //            if (cellValue == null)
        //                cellValue = "";
        //            row$.append($('<td/>').html(cellValue));
        //        }
        //        if (jsondata[i][columns[4]] != "" && jsondata[i][columns[4]] != null && jsondata[i][columns[4]].replaceAll(" ", "") != "-") {
        //            $(tableid).append(row$);
        //        }
        //    }
        //}
        //function BindTableHeader(jsondata, tableid) {/*Function used to get all column names from JSON and bind the html table header*/
        //    var columnSet = [];
        //    var headerTr$ = $('<tr/>');
        //    for (var i = 0; i < jsondata.length; i++) {
        //        var rowHash = jsondata[i];
        //        for (var key in rowHash) {
        //            if (rowHash.hasOwnProperty(key)) {
        //                if ($.inArray(key, columnSet) == -1) {/*Adding each unique column names to a variable array*/
        //                    columnSet.push(key);
        //                    headerTr$.append($('<th/>').html(key));
        //                }
        //            }
        //        }
        //    }
        //    $(tableid).append(headerTr$);
        //    return columnSet;
        //}
        $(document).ready(function () {
            var mahh = @Html.Raw(Json.Encode(Model));
            $('.amenu6').addClass('active');
            $("#btnxem").click(function () {
                $.ajax({
                    type: "POST",
                    datatype: 'json',
                    contentType: "application/json",
                    url: "@Url.Action("Xemkhoantdv", "Home")",
                    data: '{qui: ' + JSON.stringify($("#qui").val()) + ', nam: ' + JSON.stringify($("#nam").val())+ ', macn: ' + JSON.stringify($("#macn").val()) + '}',
                    success: function (data) {
                        $("#partialtable").html(data);
                        $("#tabletext").text("Số hàng đã nhập vào hệ thống " + $("#exceltable > tbody > tr.tr-data").length);
                        $("#partialtable > table").dataTable({
                            "iDisplayLength": 50, "scrollX": true, dom: 'Bfrtip',
                            buttons: [
                          'copy', 'excel'
                            ]
                        });
                        if(($("#exceltable > tr").length -1) == 0)
                        {
                            toastr.options = {
                                "closeButton": false,
                                "debug": false,
                                "newestOnTop": true,
                                "progressBar": true,
                                "positionClass": "toast-top-right",
                                "preventDuplicates": false,
                                "onclick": null,
                                "showDuration": "300",
                                "hideDuration": "1000",
                                "timeOut": "5000",
                                "extendedTimeOut": "1000",
                                "showEasing": "swing",
                                "hideEasing": "linear",
                                "showMethod": "fadeIn",
                                "hideMethod": "fadeOut"
                            }
                            Command: toastr["warning"]("Dữ liệu chưa được nhập vào !", "Thông báo")
                        }
                    },
                    error: function (request, status, error) {
                        toastr.options = {
                            "closeButton": false,
                            "debug": false,
                            "newestOnTop": true,
                            "progressBar": true,
                            "positionClass": "toast-top-right",
                            "preventDuplicates": false,
                            "onclick": null,
                            "showDuration": "300",
                            "hideDuration": "1000",
                            "timeOut": "5000",
                            "extendedTimeOut": "1000",
                            "showEasing": "swing",
                            "hideEasing": "linear",
                            "showMethod": "fadeIn",
                            "hideMethod": "fadeOut"
                        }
                        Command: toastr["warning"]("Không kết nối được dữ liệu ,Vui lòng thử lại !", "Thông báo")
                    },
                    timeout: 20000,
                });
            });
            $("#btnhoantat").click(function () {

                if (document.getElementById("fileexcel").files.length == 0) {
                    toastr.options = {
                        "closeButton": false,
                        "debug": false,
                        "newestOnTop": true,
                        "progressBar": true,
                        "positionClass": "toast-top-right",
                        "preventDuplicates": false,
                        "onclick": null,
                        "showDuration": "300",
                        "hideDuration": "1000",
                        "timeOut": "5000",
                        "extendedTimeOut": "1000",
                        "showEasing": "swing",
                        "hideEasing": "linear",
                        "showMethod": "fadeIn",
                        "hideMethod": "fadeOut"
                    }
                    Command: toastr["warning"]("Kiểm tra lại tên file excel không được có dấu và ký tự đặc biệt !", "Thông báo")
                }

                else {
                    var datamatdv = [];
                    $("#exceltable > tbody > tr").each(function () {
                        datamatdv.push({
                            "macn": $(this).find('td:eq(0)').text()
                              , "idglobal_manager": $(this).find('td:eq(12)').text().replaceAll(" ", "")
                             , "ten_manager": $(this).find('td:eq(13)').text()
                              , "idglobal_director": $(this).find('td:eq(14)').text().replaceAll(" ", "")
                               , "ten_director": $(this).find('td:eq(15)').text()
                              , "idglobal_region": $(this).find('td:eq(16)').text().replaceAll(" ", "")
                            , "ten_region": $(this).find('td:eq(17)').text()
                        });
                    });
                    $.ajax({
                        type: "POST",
                        datatype: 'json',
                        contentType: "application/json",
                        url: "@Url.Action("Themmatdv", "Home")",
                        data: JSON.stringify(datamatdv),
                        success: function (data) {
                            if(data == "1")
                            {
                                toastr.options = {
                                    "closeButton": false,
                                    "debug": false,
                                    "newestOnTop": true,
                                    "progressBar": true,
                                    "positionClass": "toast-top-right",
                                    "preventDuplicates": false,
                                    "onclick": null,
                                    "showDuration": "300",
                                    "hideDuration": "1000",
                                    "timeOut": "5000",
                                    "extendedTimeOut": "1000",
                                    "showEasing": "swing",
                                    "hideEasing": "linear",
                                    "showMethod": "fadeIn",
                                    "hideMethod": "fadeOut"
                                }
                                Command: toastr["success"]("Cập nhật thành công", "Thông báo")
                            }
                            else
                            {
                                toastr.options = {
                                    "closeButton": false,
                                    "debug": false,
                                    "newestOnTop": true,
                                    "progressBar": true,
                                    "positionClass": "toast-top-right",
                                    "preventDuplicates": false,
                                    "onclick": null,
                                    "showDuration": "300",
                                    "hideDuration": "1000",
                                    "timeOut": "5000",
                                    "extendedTimeOut": "1000",
                                    "showEasing": "swing",
                                    "hideEasing": "linear",
                                    "showMethod": "fadeIn",
                                    "hideMethod": "fadeOut"
                                }
                                Command: toastr["warning"](data, "Thông báo")
                            }
                            $('#loading').modal('hide');
                        },
                        error: function (request, status, error) {
                            toastr.options = {
                                "closeButton": false,
                                "debug": false,
                                "newestOnTop": true,
                                "progressBar": true,
                                "positionClass": "toast-top-right",
                                "preventDuplicates": false,
                                "onclick": null,
                                "showDuration": "300",
                                "hideDuration": "1000",
                                "timeOut": "5000",
                                "extendedTimeOut": "1000",
                                "showEasing": "swing",
                                "hideEasing": "linear",
                                "showMethod": "fadeIn",
                                "hideMethod": "fadeOut"
                            }
                            Command: toastr["warning"]("Không thành công ,Vui lòng thử lại !", "Thông báo")
                            $('#loading').modal('hide');
                        },
                        timeout: 20000,
                    });
                    $.ajax({
                        type: "POST",
                        datatype: 'json',
                        contentType: "application/json",
                        url: "@Url.Action("Checkimportkhoantdv", "Home")",
                        data: '{qui: ' + JSON.stringify($("#qui").val()) + ', nam: ' + JSON.stringify($("#nam").val()) + ', macn: ' + JSON.stringify($("#macn").val()) + '}',
                        success: function (data) {

                            $.confirm({
                                title: '<b>THÔNG BÁO</b>',
                                content: (data == 0) ? ('Bạn có chắc chắn muốn nhập file excel này vào dữ liệu quí ' + $("#qui").val() + ' năm ' + $("#nam").val() + ' ?') : 'Hiện đã có dữ liệu quí ' + $("#qui").val() + ' năm ' + $("#nam").val() + ' Chi nhánh ' +  data + ', bạn có chắc xóa dữ liệu cũ và thêm dữ liệu mới này vào ? </br><b class="text-danger">LƯU Ý:</b> Các dữ liệu bị xóa sẽ không thể khôi phục.',
                                buttons: {
                                    confirm: {
                                        text: 'Chắc chắn',
                                        btnClass: 'btn-success',
                                        keys: ['enter'],
                                        action: function () {
                                            var check = 1;
                                            var hang = 1;
                                            var khongthuocht = []
                                            $("#exceltable > tbody > tr").each(function () {
                                                if ($(this).find('td:eq(0)').text() == "" || $(this).find('td:eq(1)').text() == ""|| $(this).find('td:eq(3)').text() == ""  || $(this).find('td:eq(8)').text() == "" || $(this).find('td:eq(9)').text() == "") {
                                                    check = 0;
                                                    return false; // breaks
                                                }
                                                hang = hang + 1;
                                            });
                                            if (check == 1) {
                                                $.ajax({
                                                    type: "POST",
                                                    datatype: 'json',
                                                    contentType: "application/json",
                                                    url: "@Url.Action("Deletekhoantdv", "Home")",
                                                    data: '{qui: ' + JSON.stringify($("#qui").val()) + ', nam: ' + JSON.stringify($("#nam").val()) + ', macn: ' + JSON.stringify($("#macn").val()) + '}',
                                                    success: function (data) {
                                                        $('#loading').modal({ backdrop: 'static', keyboard: false });
                                                        var data1 = [];
                                                        $("#exceltable > tbody > tr").each(function () {
                                                            data1.push({
                                                                "qui": $("#qui").val()
                                                                , "nam": $("#nam").val()
                                                                , "macn": $(this).find('td:eq(0)').text()
                                                                , "thang": $(this).find('td:eq(1)').text()
                                                                , "matdv": $(this).find('td:eq(3)').text()
                                                                , "phanloai": $(this).find('td:eq(5)').text()
                                                                , "matdvtotruong": $(this).find('td:eq(6)').text()
                                                                , "dskhoan": $(this).find('td:eq(7)').text().replaceAll(",", "").replaceAll(".", "").replace(".00", "")
                                                                , "idlocal": $(this).find('td:eq(8)').text().replaceAll(" ", "")
                                                                , "idglobal": $(this).find('td:eq(9)').text().replaceAll(" ", "")
                                                                 , "idglobal_supervisor": $(this).find('td:eq(10)').text().replaceAll(" ", "")
                                                                  , "idglobal_manager": $(this).find('td:eq(12)').text().replaceAll(" ", "")
                                                                  , "idglobal_director": $(this).find('td:eq(14)').text().replaceAll(" ", "")
                                                                  , "idglobal_region": $(this).find('td:eq(16)').text().replaceAll(" ", "")

                                                            });
                                                        });
                                                        $.ajax({
                                                            type: "POST",
                                                            datatype: 'json',
                                                            contentType: "application/json",
                                                            url: "@Url.Action("Importkhoantdv", "Home")",
                                                            data: JSON.stringify(data1),
                                                            success: function (data) {
                                                                if(data == "1")
                                                                {
                                                                    toastr.options = {
                                                                        "closeButton": false,
                                                                        "debug": false,
                                                                        "newestOnTop": true,
                                                                        "progressBar": true,
                                                                        "positionClass": "toast-top-right",
                                                                        "preventDuplicates": false,
                                                                        "onclick": null,
                                                                        "showDuration": "300",
                                                                        "hideDuration": "1000",
                                                                        "timeOut": "5000",
                                                                        "extendedTimeOut": "1000",
                                                                        "showEasing": "swing",
                                                                        "hideEasing": "linear",
                                                                        "showMethod": "fadeIn",
                                                                        "hideMethod": "fadeOut"
                                                                    }
                                                                    Command: toastr["success"]("Cập nhật thành công", "Thông báo")
                                                                }
                                                                else
                                                                {
                                                                    toastr.options = {
                                                                        "closeButton": false,
                                                                        "debug": false,
                                                                        "newestOnTop": true,
                                                                        "progressBar": true,
                                                                        "positionClass": "toast-top-right",
                                                                        "preventDuplicates": false,
                                                                        "onclick": null,
                                                                        "showDuration": "300",
                                                                        "hideDuration": "1000",
                                                                        "timeOut": "5000",
                                                                        "extendedTimeOut": "1000",
                                                                        "showEasing": "swing",
                                                                        "hideEasing": "linear",
                                                                        "showMethod": "fadeIn",
                                                                        "hideMethod": "fadeOut"
                                                                    }
                                                                    Command: toastr["warning"](data, "Thông báo")
                                                                }
                                                                $('#loading').modal('hide');
                                                            },
                                                            error: function (request, status, error) {
                                                                toastr.options = {
                                                                    "closeButton": false,
                                                                    "debug": false,
                                                                    "newestOnTop": true,
                                                                    "progressBar": true,
                                                                    "positionClass": "toast-top-right",
                                                                    "preventDuplicates": false,
                                                                    "onclick": null,
                                                                    "showDuration": "300",
                                                                    "hideDuration": "1000",
                                                                    "timeOut": "5000",
                                                                    "extendedTimeOut": "1000",
                                                                    "showEasing": "swing",
                                                                    "hideEasing": "linear",
                                                                    "showMethod": "fadeIn",
                                                                    "hideMethod": "fadeOut"
                                                                }
                                                                Command: toastr["warning"]("Không thành công ,Vui lòng thử lại !", "Thông báo")
                                                                $('#loading').modal('hide');
                                                            },
                                                            timeout: 20000,
                                                        });

                                                    },
                                                    error: function (request, status, error) {
                                                        toastr.options = {
                                                            "closeButton": false,
                                                            "debug": false,
                                                            "newestOnTop": true,
                                                            "progressBar": true,
                                                            "positionClass": "toast-top-right",
                                                            "preventDuplicates": false,
                                                            "onclick": null,
                                                            "showDuration": "300",
                                                            "hideDuration": "1000",
                                                            "timeOut": "5000",
                                                            "extendedTimeOut": "1000",
                                                            "showEasing": "swing",
                                                            "hideEasing": "linear",
                                                            "showMethod": "fadeIn",
                                                            "hideMethod": "fadeOut"
                                                        }
                                                        Command: toastr["warning"]("Không kết nối được dữ liệu ,Vui lòng thử lại !", "Thông báo")
                                                    },
                                                    timeout: 20000,
                                                });
                                            }
                                            else {
                                                toastr.options = {
                                                    "closeButton": false,
                                                    "debug": false,
                                                    "newestOnTop": true,
                                                    "progressBar": true,
                                                    "positionClass": "toast-top-right",
                                                    "preventDuplicates": false,
                                                    "onclick": null,
                                                    "showDuration": "300",
                                                    "hideDuration": "1000",
                                                    "timeOut": "5000",
                                                    "extendedTimeOut": "1000",
                                                    "showEasing": "swing",
                                                    "hideEasing": "linear",
                                                    "showMethod": "fadeIn",
                                                    "hideMethod": "fadeOut"
                                                }
                                                Command: toastr["warning"]("Hàng thứ " + hang + " trong file excel nhập vào có ô trống hoặc số lượng tồn không phải là dạng số, vui lòng thử lại", "Thông báo")
                                            }
                                        }
                                    },
                                    cancel: {
                                        text: 'Hủy',
                                        btnClass: 'btn-danger',
                                        keys: ['esc'],
                                        action: function () {

                                        }
                                    }
                                }
                            });



                        },
                        error: function (request, status, error) {
                            toastr.options = {
                                "closeButton": false,
                                "debug": false,
                                "newestOnTop": true,
                                "progressBar": true,
                                "positionClass": "toast-top-right",
                                "preventDuplicates": false,
                                "onclick": null,
                                "showDuration": "300",
                                "hideDuration": "1000",
                                "timeOut": "5000",
                                "extendedTimeOut": "1000",
                                "showEasing": "swing",
                                "hideEasing": "linear",
                                "showMethod": "fadeIn",
                                "hideMethod": "fadeOut"
                            }
                            Command: toastr["warning"]("Không kết nối được dữ liệu ,Vui lòng thử lại !", "Thông báo")
                        },
                        timeout: 20000,
                    });


                }
            });

        });
    </script>
}








